---
dataMaid: yes
title: Codebook for agency_data
subtitle: "Autogenerated data summary from dataMaid"
date: 2019-08-29 12:18:48
output: pdf_document
---
```{r , echo=FALSE, include=FALSE, warning=FALSE, message=FALSE, error=FALSE}
library("ggplot2")
library("pander")
```

```{r 'visualFunctions', echo=FALSE, include=FALSE, warning=FALSE, message=FALSE, error=FALSE}
ggAggHist <- getFromNamespace("ggAggHist", "dataMaid")
ggAggBarplot <- getFromNamespace("ggAggBarplot", "dataMaid")
```

# Data report overview
The dataset examined has the following dimensions:


---------------------------------
Feature                    Result
------------------------ --------
Number of observations       2376

Number of variables            14
---------------------------------




# Codebook summary table

------------------------------------------------------------------------------
Label   Variable                  Class       # unique  Missing  Description  
                                                values                        
------- ------------------------- --------- ---------- --------- -------------
        **[account\_name]**       factor          2375  0.00 %                

        **[account\_type]**       factor             2  0.00 %                

        **[assigned\_agent]**     factor             6  0.00 %                

        **[branch\_name]**        factor             1  0.00 %                

        **[lob]**                 factor            20  0.00 %                

        **[master\_company]**     factor            20  0.00 %                

        **[effective\_date]**     Date             752  0.00 %                

        **[policy\_term]**        factor             3  0.00 %                

        **[policy\_type]**        factor             2  0.00 %                

        **[annual\_premium]**     numeric         1966  0.00 %                

        **[written\_premium]**    numeric         1717  0.00 %                

        **[rating\_state]**       factor             8  0.00 %                

        **[status]**              factor             2  0.00 %                

        **[transaction\_type]**   factor            13  0.00 %                
------------------------------------------------------------------------------




# Variable list
## account\_name
## The account name is the name of the insured. 

<div class = "row">
<div class = "col-lg-8">

-------------------------------------------
Feature                              Result
------------------------- -----------------
Variable type                        factor

Number of missing obs.              0 (0 %)

Number of unique values                2375

Mode                        "Lucius Schoen"

Reference category              Abdul Kiehn
-------------------------------------------


</div>
</div>

---

## account\_type
## The account type really indicates the type of business, commercial lines or personal lines.

<div class = "row">
<div class = "col-lg-8">

--------------------------------------
Feature                         Result
------------------------- ------------
Variable type                   factor

Number of missing obs.         0 (0 %)

Number of unique values              2

Mode                        "Personal"

Reference category          Commercial
--------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-2-account-type', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:2, .Label = c("Commercial", 
"Personal"), class = "factor"), y = c(106L, 2270L)), class = "data.frame", row.names = c(NA, 
-2L)), vnam = "account_type")
```

</div>
</div>


- Observed factor levels: \"Commercial\", \"Personal\". 



---

## assigned\_agent
## The name of the agency's agent who manages the account.

<div class = "row">
<div class = "col-lg-8">

--------------------------------------------
Feature                               Result
------------------------- ------------------
Variable type                         factor

Number of missing obs.               0 (0 %)

Number of unique values                    6

Mode                         "Doyle, Walter"

Reference category          Boehm, Sebastian
--------------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-3-assigned-agent', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:6, .Label = c("Boehm, Sebastian", 
"Doyle, Walter", "Insurance, Nichersen", "Padberg, Tracy", "Rohan, Elwood", 
"Tremblay, Deena"), class = "factor"), y = c(338L, 939L, 64L, 
125L, 86L, 824L)), class = "data.frame", row.names = c(NA, -6L
)), vnam = "assigned_agent")
```

</div>
</div>


- Observed factor levels: \"Boehm, Sebastian\", \"Doyle, Walter\", \"Insurance, Nichersen\", \"Padberg, Tracy\", \"Rohan, Elwood\", \"Tremblay, Deena\". 



---

## branch\_name
## The name of the insurance agency from which the entire data set originated.

* The variable only takes one (non-missing) value: \"Acme Group Insurance\". The variable contains 0 \% missing observations.



---

## lob
## Stands for line of business, and in insurance, there are many (many) lines and sub-lines. The agency doesn't have too many LOBs.

<div class = "row">
<div class = "col-lg-8">

---------------------------------------------
Feature                                Result
------------------------- -------------------
Variable type                          factor

Number of missing obs.                0 (0 %)

Number of unique values                    20

Mode                        "Auto (Personal)"

Reference category          Auto (Commercial)
---------------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-5-lob', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:20, .Label = c("Auto (Commercial)", 
"Auto (Personal)", "BOP Liability", "BOP Property", "Business Owners Policy", 
"Commercial Prpty", "Dwelling fire", "Flood", "Genl Liability", 
"Homeowners", "Inland marine (comm)", "Inland Marine (pers)", 
"Personal Liability", "Professional Liab", "Renters", "Signs", 
"Umbrella - Comm", "Umbrella - Personal", "Watercraft (small boat)", 
"Workers comp"), class = "factor"), y = c(32L, 1491L, 2L, 1L, 
15L, 4L, 54L, 2L, 43L, 673L, 5L, 3L, 1L, 2L, 2L, 1L, 3L, 34L, 
6L, 2L)), class = "data.frame", row.names = c(NA, -20L)), vnam = "lob")
```

</div>
</div>


- Observed factor levels: \"Auto (Commercial)\", \"Auto (Personal)\", \"BOP Liability\", \"BOP Property\", \"Business Owners Policy\", \"Commercial Prpty\", \"Dwelling fire\", \"Flood\", \"Genl Liability\", \"Homeowners\", \"Inland marine (comm)\", \"Inland Marine (pers)\", \"Personal Liability\", \"Professional Liab\", \"Renters\", \"Signs\", \"Umbrella - Comm\", \"Umbrella - Personal\", \"Watercraft (small boat)\", \"Workers comp\". 



---

## master\_company
## The master company is the actual insurer that was used for a given transaction.

<div class = "row">
<div class = "col-lg-8">

-------------------------------------------------
Feature                                    Result
------------------------- -----------------------
Variable type                              factor

Number of missing obs.                    0 (0 %)

Number of unique values                        20

Mode                        "Aimonetti Insurance"

Reference category            Aimonetti Insurance
-------------------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-6-master-company', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:20, .Label = c("Aimonetti Insurance", 
"Beaulah General Agency", "Beaulah Insurance", "Beyer Strategic Insurance", 
"Borer Group, LLC", "Brakus Fire & Casualty", "Breitenberg Insurance", 
"DuBuque Insurance", "Friesen Insurance", "Helen Herman Group", 
"Hui Insurance", "Kilback Excess & Surplus", "Roderick Insurance", 
"Ryan Hyatt Insurance", "Schimel Mutual Insurance", "Schuppe Group", 
"Simonis Insurance", "Spinka West Insurance", "Streich Group Insurance", 
"Sultan Insurance"), class = "factor"), y = c(730L, 3L, 166L, 
113L, 52L, 2L, 325L, 252L, 122L, 7L, 129L, 6L, 105L, 12L, 56L, 
151L, 60L, 49L, 35L, 1L)), class = "data.frame", row.names = c(NA, 
-20L)), vnam = "master_company")
```

</div>
</div>


- Observed factor levels: \"Aimonetti Insurance\", \"Beaulah General Agency\", \"Beaulah Insurance\", \"Beyer Strategic Insurance\", \"Borer Group, LLC\", \"Brakus Fire & Casualty\", \"Breitenberg Insurance\", \"DuBuque Insurance\", \"Friesen Insurance\", \"Helen Herman Group\", \"Hui Insurance\", \"Kilback Excess & Surplus\", \"Roderick Insurance\", \"Ryan Hyatt Insurance\", \"Schimel Mutual Insurance\", \"Schuppe Group\", \"Simonis Insurance\", \"Spinka West Insurance\", \"Streich Group Insurance\", \"Sultan Insurance\". 



---

## effective\_date
## This is the data the insurance goes into effect and is *not* the same as "today" or whatever date the transaction was created. It\'s not uncommon to have future dated policies (and in rare cases even back dated policies).

<div class = "row">
<div class = "col-lg-8">

--------------------------------------------------
Feature                                     Result
------------------------- ------------------------
Variable type                                 Date

Number of missing obs.                     0 (0 %)

Number of unique values                        752

Mode                                  "2014-04-01"

Min. and max.               2011-02-01; 2014-10-07

1st and 3rd quartiles       2013-05-08; 2014-04-21
--------------------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-7-effective-date', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggHist(data = structure(list(xmin = structure(c(15000, 15200, 
15400, 15600, 15800, 16000, 16200), class = "Date"), xmax = structure(c(15200, 
15400, 15600, 15800, 16000, 16200, 16400), class = "Date"), ymin = c(0, 
0, 0, 0, 0, 0, 0), ymax = c(57L, 89L, 190L, 214L, 413L, 950L, 
463L)), row.names = c(NA, -7L), class = "data.frame"), vnam = "effective_date")
```

</div>
</div>




---

## policy\_term
## The length of time the policy is written for. 

<div class = "row">
<div class = "col-lg-8">

---------------------------------------
Feature                          Result
------------------------- -------------
Variable type                    factor

Number of missing obs.          0 (0 %)

Number of unique values               3

Mode                        "12 Months"

Reference category            12 Months
---------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-8-policy-term', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:3, .Label = c("12 Months", 
"6 Months", "7 Months"), class = "factor"), y = c(1690L, 685L, 
1L)), class = "data.frame", row.names = c(NA, -3L)), vnam = "policy_term")
```

</div>
</div>


- Observed factor levels: \"12 Months\", \"6 Months\", \"7 Months\". 



---

## policy\_type
## Policy type is very much like account type in many instances but for some accounts, there are both personal and commercial policies, necessitating two variables.
<div class = "row">
<div class = "col-lg-8">

--------------------------------------
Feature                         Result
------------------------- ------------
Variable type                   factor

Number of missing obs.         0 (0 %)

Number of unique values              2

Mode                        "Personal"

Reference category          Commercial
--------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-9-policy-type', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:2, .Label = c("Commercial", 
"Personal"), class = "factor"), y = c(123L, 2253L)), class = "data.frame", row.names = c(NA, 
-2L)), vnam = "policy_type")
```

</div>
</div>


- Observed factor levels: \"Commercial\", \"Personal\". 



---

## annual\_premium
## This is the annualized premium, which in some cases is exactly equal to the written premium. However, since some policy are written for less than a year, and other transactions (e.g., policy changes) result in premium for less than a year, the annual and written premium differ. This value is always what the premium would be over the course of an entire year.

<div class = "row">
<div class = "col-lg-8">

-------------------------------------------
Feature                              Result
------------------------- -----------------
Variable type                       numeric

Number of missing obs.              0 (0 %)

Number of unique values                1966

Median                              1559.34

1st and 3rd quartiles          812; 2728.72

Min. and max.               43.04; 19002.17
-------------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-10-annual-premium', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggHist(data = structure(list(xmin = c(0, 2000, 4000, 6000, 
8000, 10000, 12000, 14000, 16000, 18000), xmax = c(2000, 4000, 
6000, 8000, 10000, 12000, 14000, 16000, 18000, 20000), ymin = c(0, 
0, 0, 0, 0, 0, 0, 0, 0, 0), ymax = c(1468L, 635L, 183L, 58L, 
18L, 9L, 0L, 1L, 2L, 2L)), class = "data.frame", row.names = c(NA, 
-10L)), vnam = "annual_premium")
```

</div>
</div>




---

## written\_premium
## As noted for `annual_premium`, the written premium is how much the client was actually charged. This amount is pro-rated for the policy term or the amount of the policy term remaining.

<div class = "row">
<div class = "col-lg-8">

-------------------------------------------
Feature                              Result
------------------------- -----------------
Variable type                       numeric

Number of missing obs.              0 (0 %)

Number of unique values                1717

Median                              1218.73

1st and 3rd quartiles       724.97; 2022.17

Min. and max.                43.04; 16504.1
-------------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-11-written-premium', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggHist(data = structure(list(xmin = c(0, 1000, 2000, 3000, 
4000, 5000, 6000, 7000, 8000, 9000, 10000, 11000, 12000, 13000, 
14000, 15000, 16000), xmax = c(1000, 2000, 3000, 4000, 5000, 
6000, 7000, 8000, 9000, 10000, 11000, 12000, 13000, 14000, 15000, 
16000, 17000), ymin = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0), ymax = c(964L, 807L, 340L, 132L, 57L, 37L, 19L, 
8L, 6L, 2L, 1L, 1L, 0L, 0L, 1L, 0L, 1L)), class = "data.frame", row.names = c(NA, 
-17L)), vnam = "written_premium")
```

</div>
</div>




---

## rating\_state
## The state where the insured is at, which is the insured state.

<div class = "row">
<div class = "col-lg-8">

-----------------------------------
Feature                      Result
------------------------- ---------
Variable type                factor

Number of missing obs.      0 (0 %)

Number of unique values           8

Mode                           "FL"

Reference category               FL
-----------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-12-rating-state', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:8, .Label = c("FL", 
"ND", "NV", "OK", "OR", "UT", "WA", "WY"), class = "factor"), 
    y = c(2365L, 1L, 1L, 5L, 1L, 1L, 1L, 1L)), class = "data.frame", row.names = c(NA, 
-8L)), vnam = "rating_state")
```

</div>
</div>


- Observed factor levels: \"FL\", \"ND\", \"NV\", \"OK\", \"OR\", \"UT\", \"WA\", \"WY\". 



---

## status
## Status indicates the policy / account / insured / transaction status.

<div class = "row">
<div class = "col-lg-8">

------------------------------------
Feature                       Result
------------------------- ----------
Variable type                 factor

Number of missing obs.       0 (0 %)

Number of unique values            2

Mode                        "Active"

Reference category            Active
------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-13-status', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:2, .Label = c("Active", 
"Inactive"), class = "factor"), y = c(1296L, 1080L)), class = "data.frame", row.names = c(NA, 
-2L)), vnam = "status")
```

</div>
</div>


- Observed factor levels: \"Active\", \"Inactive\". 



---

## transaction\_type
## The transaction shows what was actually done within the agency management system.

<div class = "row">
<div class = "col-lg-8">

-----------------------------------------
Feature                            Result
------------------------- ---------------
Variable type                      factor

Number of missing obs.            0 (0 %)

Number of unique values                13

Mode                        "Cancel Conf"

Reference category            Cancel Conf
-----------------------------------------


</div>
<div class = "col-lg-4">
```{r 'Var-14-transaction-type', echo=FALSE, fig.width=4, fig.height=3, message=FALSE, warning=FALSE}
ggAggBarplot(data = structure(list(x = structure(1:13, .Label = c("Cancel Conf", 
"Cancel Req", "Cancel/DNR", "DB Synch", "New Business", "Non-Renewal", 
"Policy Change", "Re-Issue", "Reinstate", "Renew Quote", "Renewal", 
"Renewal Re-Quote", "Rewrite"), class = "factor"), y = c(982L, 
9L, 5L, 4L, 243L, 1L, 553L, 1L, 62L, 1L, 480L, 2L, 33L)), class = "data.frame", row.names = c(NA, 
-13L)), vnam = "transaction_type")
```

</div>
</div>


- Observed factor levels: \"Cancel Conf\", \"Cancel Req\", \"Cancel/DNR\", \"DB Synch\", \"New Business\", \"Non-Renewal\", \"Policy Change\", \"Re-Issue\", \"Reinstate\", \"Renew Quote\", \"Renewal\", \"Renewal Re-Quote\", \"Rewrite\". 



---



Report generation information:

 *  Created by Frank Neugebauer (username: `neugg`).

 *  Report creation time: Thu Aug 29 2019 12:18:49

 *  Report was run from directory: `C:/Users/neugg/OneDrive/Documents/GitHub/agency_data/data`

 *  dataMaid v1.3.2 [Pkg: 2019-07-27 from CRAN (R 3.6.1)]

 *  R version 3.6.0 (2019-04-26).

 *  Platform: x86_64-w64-mingw32/x64 (64-bit)(Windows 10 x64 (build 17134)).

 *  Function call: `makeDataReport(data = agency_data, mode = c("summarize", "visualize", 
"check"), smartNum = FALSE, file = "codebook_agency_data.Rmd", 
    checks = list(character = "showAllFactorLevels", factor = "showAllFactorLevels", 
        labelled = "showAllFactorLevels", haven_labelled = "showAllFactorLevels", 
        numeric = NULL, integer = NULL, logical = NULL, Date = NULL), 
    listChecks = FALSE, maxProbVals = Inf, codebook = TRUE, reportTitle = "Codebook for agency_data")`

